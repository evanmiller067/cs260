Evan Miller 
CS260
2.16.19

=== Design and Implementation Plan Questions ===

Below are a few questions about how you will design your program and your
implementation plan. It is crucial to have a reasonable design and
implementation plan before you start your program. Without this, success is
unlikely. The following questions will help guide you in your thinking and
raise some important questions and issues. There is no single "right" answer
to each of the questions but there are some "wrong" answers. Some designs and
plans are better than others. The point here is for you to think about what
you're going to do.

Make a copy of this file and edit it, adding your answers then turn this
document in.

----------------------------------------------------------------------

1) The instructions.txt document lists a minimum set of classes that you need
to have in your program: family, familymgr, hashtable. How will each of these
classes relate to each other. For example, will some of these classes contain
other classes as data members? Will some of these classes call methods on the
other classes?

  familymgr -- hashtable: 

  Familymgr will have functions like print and addFamily to access family members stored
  inside the hashtable. 

  familymgr -- family: 
  
  Familymge will take a family object and pass it into the hashtable. The familymgr will be 
  able to print families by taking a family ID and utilizing the hashtable.

  family -- hashtable: 
  
  The Family class will be for encapsulation, it will not know any hashtable functions. 
  The hashtable will know the size of the family object that is being passed into the 
  hashtable so it can allocate the correct size of memory. 

2) What will be the data type for the array elements in your hashtable? I am
asking for an actual data type, not just a description of the kind of data
that will be in your array.

  Each element is the hashtable will be a pointer fo Family type. These pointers
  are the heads of a linked list of families contained within the hashtable.

3) Your familymgr class should be written in such a way that you could replace
the hashtable with a linked list (if you had a linked list that held family
data) very easily. How are you going to design your program so that this
change could be made quickly?

  The familymgr class will hid all of the data from the housinghelper, this 
  encapsulation will allow for the hashtable to be switched to a linked-list
  without the housinghelper being aware. My hashtable is an array of linked-list 
  heads, the familymgr functions should work on both a hashtable and a linked list. 

4) What is your testing strategy? Has your testing strategy changed since the
first programming assignment (martian_weather) and if so, how?

  My testing strategy hasn't changed much from the first assignment, I will allow myself more
  time to test this assignment due to the fact that the last two assignments I've turned in late
  and not complete. I will build the hashtable first, test it, and then move on the the other 
  functions and classes. 



